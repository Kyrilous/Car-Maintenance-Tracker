{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyril\\\\IdeaProjects\\\\car-maintenance-tracker\\\\frontend\\\\src\\\\components\\\\MaintenanceList.js\";\n// import React, { useState, useEffect } from \"react\";\n// import Card from \"@mui/material/Card\";\n// import Typography from \"@mui/material/Typography\";\n// import Box from \"@mui/material/Box\";\n// import Button from \"@mui/material/Button\";\n// import CardContent from \"@mui/material/CardContent\";\n\n// function MaintenanceList(newlyAddedId){\n//     const [records, setRecords] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n\n//     useEffect(() => {\n//       const userId = localStorage.getItem('user_id');\n//       console.log(\"‚úÖ Fetching records for user ID:\", userId);\n//       fetch(`http://127.0.0.1:5000/records?user_id=${userId}`)\n//         .then((response) => {\n//             if(!response.ok){\n//                 throw new Error(\"Failed to fetch data from database\");\n//             }\n//             return response.json();\n//         })\n//         .then((data) => {\n//             setRecords(data);\n//             setLoading(false);\n//         })\n//         .catch((error) => {\n//             console.error(error.message);\n//             setLoading(false);\n//         });\n//     }, []) //Runs when the component mounts\n\n//     if(loading){\n//         return <p>Loading Records...</p>\n//     }\n\n//     if(error){\n//         return <p style={{color: \"red\"}}> Error: {error} </p>\n//     }\n\n//     const deleteRecord = async (id) => {\n//       try {\n//         const response = await fetch(`http://127.0.0.1:5000/records/${id}`, {\n\n//           method: \"DELETE\",\n//         });\n\n//         if(response.ok){\n//           setRecords(records.filter(record => record.id !== id)); // Remove from UI\n//         }else{\n//           console.error(\"Failed to delete record\");\n//         }\n//       }catch (error) {\n//         console.error(\"Error deleting record\", error);\n//       }\n//     };\n\n//     //UI layout\n//     return (\n//         <Box sx={{ maxWidth: \"600px\", margin: \"auto\", marginTop: \"20px\" }}>\n//           <Typography variant=\"h5\" fontWeight=\"bold\" gutterBottom>\n//             Maintenance History\n//           </Typography>\n\n//           {records.length === 0 ? (\n//             <Typography color=\"textSecondary\">No records found.</Typography>\n//           ) : (\n//             records.map((record, index) => (\n//               <Card key={record.id} sx={{ marginBottom: \"10px\", variant:\"outlined\" ,padding: \"10px\", borderRadius: \"8px\", backgroundColor: record.id === newlyAddedId ? \"#d0f5d8\" : \"#f9f9f9\", transition: \"background-color 0.5s ease\" }}>\n//                 <CardContent>\n//                   <Typography variant=\"h6\" fontWeight=\"bold\">\n//                     {record.service_type}\n//                   </Typography>\n//                   <Typography variant=\"body2\" color=\"textSecondary\">\n//                     üìÖ {record.date} | üöó {record.mileage} miles\n//                   </Typography>\n//                 </CardContent>\n//                 <Button\n//                   variant=\"contained\"\n//                   color=\"primary\"\n//                   onClick={() => deleteRecord(record.id)}\n//                 >\n//                   üóëÔ∏è\n//                 </Button>\n//               </Card>\n//             ))\n//           )}\n//         </Box>\n//       );\n// }\n// export default MaintenanceList;\n\nimport React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MaintenanceList({\n  records,\n  newlyAddedId,\n  onDelete\n}) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      fontWeight: \"bold\",\n      gutterBottom: true,\n      children: \"Maintenance History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), records.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textSecondary\",\n      children: \"No records found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : records.map(record => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        marginBottom: \"10px\",\n        padding: \"10px\",\n        borderRadius: \"8px\",\n        backgroundColor: record.id === newlyAddedId ? \"#d0f5d8\" : \"#f9f9f9\",\n        transition: \"background-color 0.5s ease\",\n        borderLeft: \"5px solid #1976d2\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontWeight: \"bold\",\n          children: record.service_type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: [\"\\uD83D\\uDCC5 \", record.date, \" | \\uD83D\\uDE97 \", record.mileage, \" miles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => onDelete(record.id),\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, record.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_c = MaintenanceList;\nexport default MaintenanceList;\nvar _c;\n$RefreshReg$(_c, \"MaintenanceList\");","map":{"version":3,"names":["React","Card","Typography","Box","Button","CardContent","jsxDEV","_jsxDEV","MaintenanceList","records","newlyAddedId","onDelete","sx","maxWidth","margin","marginTop","children","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","length","color","map","record","marginBottom","padding","borderRadius","backgroundColor","id","transition","borderLeft","service_type","date","mileage","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kyril/IdeaProjects/car-maintenance-tracker/frontend/src/components/MaintenanceList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Card from \"@mui/material/Card\";\r\n// import Typography from \"@mui/material/Typography\";\r\n// import Box from \"@mui/material/Box\";\r\n// import Button from \"@mui/material/Button\";\r\n// import CardContent from \"@mui/material/CardContent\";\r\n\r\n// function MaintenanceList(newlyAddedId){\r\n//     const [records, setRecords] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//       const userId = localStorage.getItem('user_id');\r\n//       console.log(\"‚úÖ Fetching records for user ID:\", userId);\r\n//       fetch(`http://127.0.0.1:5000/records?user_id=${userId}`)\r\n//         .then((response) => {\r\n//             if(!response.ok){\r\n//                 throw new Error(\"Failed to fetch data from database\");\r\n//             }\r\n//             return response.json();\r\n//         })\r\n//         .then((data) => {\r\n//             setRecords(data);\r\n//             setLoading(false);\r\n//         })\r\n//         .catch((error) => {\r\n//             console.error(error.message);\r\n//             setLoading(false);\r\n//         });\r\n//     }, []) //Runs when the component mounts\r\n\r\n//     if(loading){\r\n//         return <p>Loading Records...</p>\r\n//     }\r\n\r\n//     if(error){\r\n//         return <p style={{color: \"red\"}}> Error: {error} </p>\r\n//     }\r\n\r\n//     const deleteRecord = async (id) => {\r\n//       try {\r\n//         const response = await fetch(`http://127.0.0.1:5000/records/${id}`, {\r\n          \r\n//           method: \"DELETE\",\r\n//         });\r\n\r\n//         if(response.ok){\r\n//           setRecords(records.filter(record => record.id !== id)); // Remove from UI\r\n//         }else{\r\n//           console.error(\"Failed to delete record\");\r\n//         }\r\n//       }catch (error) {\r\n//         console.error(\"Error deleting record\", error);\r\n//       }\r\n//     };\r\n    \r\n\r\n\r\n//     //UI layout\r\n//     return (\r\n//         <Box sx={{ maxWidth: \"600px\", margin: \"auto\", marginTop: \"20px\" }}>\r\n//           <Typography variant=\"h5\" fontWeight=\"bold\" gutterBottom>\r\n//             Maintenance History\r\n//           </Typography>\r\n      \r\n//           {records.length === 0 ? (\r\n//             <Typography color=\"textSecondary\">No records found.</Typography>\r\n//           ) : (\r\n//             records.map((record, index) => (\r\n//               <Card key={record.id} sx={{ marginBottom: \"10px\", variant:\"outlined\" ,padding: \"10px\", borderRadius: \"8px\", backgroundColor: record.id === newlyAddedId ? \"#d0f5d8\" : \"#f9f9f9\", transition: \"background-color 0.5s ease\" }}>\r\n//                 <CardContent>\r\n//                   <Typography variant=\"h6\" fontWeight=\"bold\">\r\n//                     {record.service_type}\r\n//                   </Typography>\r\n//                   <Typography variant=\"body2\" color=\"textSecondary\">\r\n//                     üìÖ {record.date} | üöó {record.mileage} miles\r\n//                   </Typography>\r\n//                 </CardContent>\r\n//                 <Button\r\n//                   variant=\"contained\"\r\n//                   color=\"primary\"\r\n//                   onClick={() => deleteRecord(record.id)}\r\n//                 >\r\n//                   üóëÔ∏è\r\n//                 </Button>\r\n//               </Card>\r\n//             ))\r\n//           )}\r\n//         </Box>\r\n//       );\r\n// }\r\n// export default MaintenanceList;\r\n\r\n\r\nimport React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\n\r\n\r\n\r\nfunction MaintenanceList({ records, newlyAddedId, onDelete }) {\r\n  return (\r\n    <Box sx={{ maxWidth: \"600px\", margin: \"auto\", marginTop: \"20px\" }}>\r\n      <Typography variant=\"h5\" fontWeight=\"bold\" gutterBottom>\r\n        Maintenance History\r\n      </Typography>\r\n\r\n      {records.length === 0 ? (\r\n        <Typography color=\"textSecondary\">No records found.</Typography>\r\n      ) : (\r\n        records.map((record) => (\r\n          <Card\r\n            key={record.id}\r\n            sx={{\r\n              marginBottom: \"10px\",\r\n              padding: \"10px\",\r\n              borderRadius: \"8px\",\r\n              backgroundColor:\r\n                record.id === newlyAddedId ? \"#d0f5d8\" : \"#f9f9f9\",\r\n              transition: \"background-color 0.5s ease\",\r\n              borderLeft: \"5px solid #1976d2\",\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                {record.service_type}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                üìÖ {record.date} | üöó {record.mileage} miles\r\n              </Typography>\r\n            </CardContent>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => onDelete(record.id)}\r\n            >\r\n              üóëÔ∏è\r\n            </Button>\r\n          </Card>\r\n        ))\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MaintenanceList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}