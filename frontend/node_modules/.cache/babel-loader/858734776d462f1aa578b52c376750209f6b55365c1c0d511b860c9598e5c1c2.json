{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyril\\\\IdeaProjects\\\\car-maintenance-tracker\\\\frontend\\\\src\\\\components\\\\AddMaintenance.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { auth } from \"../firebase\";\nimport Select from \"@mui/material/Select\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddMaintenance({\n  user_id,\n  onAdd\n}) {\n  _s();\n  const [serviceType, setServiceType] = useState(\"\");\n  const [mileage, setMileage] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const maintenanceOptions = [\"Oil Change\", \"Brake Pads\", \"Tire Rotation\", \"Battery Replacement\", \"Spark Plugs\", \"Coolant Flush\", \"Transmission Fluid\", \"Cabin Air Filter\", \"Inspection\", \"Alignment\", \"Tire Change\", \"Power Steering Fluid\", \"Serpentine Belt\", \"Wiper Blades\", \"Brake Fluid\", \"Engine Replacement\", \"Transmission Replacement\", \"Brake Caliper Replacement\", \"Strut Replacement\", \"Wheel Balance\", \"Alternator Replacement\", \"Engine Air Filter Replacement\", \"Headlight Bulb Replacement\", \"Windshield Crack Repair\", \"Windshield Replacement\", \"Custom...\"];\n\n  //   const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     if (!serviceType || !mileage || !date) return;\n  //     const user = auth.currentUser;\n  //     if(!user) {\n  //       console.error(\"User is not logged in\");\n  //       return;\n  //     }\n\n  //     const idToken = await user.getIdToken();\n\n  //     const newRecord = { serviceType, mileage, date, user_id };\n\n  //     try {\n  //         console.log(\"Submitting record:\", { serviceType, mileage, date });\n  //         const response = await fetch(\"http://127.0.0.1:5000/add_record\", {\n  //             method: \"POST\",\n  //             headers: { \n  //               \"Content-Type\": \"application/json\",\n  //             },\n  //             body: JSON.stringify(newRecord)\n  //         });\n\n  //         if (!response.ok) {\n  //             throw new Error(\"Failed to add record\");\n  //         }\n\n  //         const data = await response.json();\n  //         console.log(\"Record Added Successfully!\", data);\n  //         window.location.reload();\n\n  //     } catch (error) {\n  //         console.error(\"Error:\", error);\n  //     }\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!serviceType || !mileage || !date) return;\n    const user = auth.currentUser;\n    if (!user) {\n      console.error(\"User is not logged in\");\n      return;\n    }\n    const idToken = await user.getIdToken();\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/add_record\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `${idToken}` // âœ… token included\n        },\n        body: JSON.stringify({\n          serviceType,\n          mileage,\n          date\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to add record\");\n      const data = await response.json();\n      console.log(\"Added record:\", data);\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const today = new Date().toISOString().split(\"T\")[0];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      marginTop: \"20px\",\n      padding: \"20px\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"8px\",\n      backgroundColor: \"#f9f9f9\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      fontWeight: \"bold\",\n      gutterBottom: true,\n      children: \"Add Maintenance Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        freeSolo: true,\n        fullWidth: true,\n        options: maintenanceOptions,\n        value: serviceType,\n        onChange: (event, newValue) => setServiceType(newValue),\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Service Type\",\n          variant: \"outlined\",\n          required: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Mileage\",\n        type: \"number\",\n        value: mileage,\n        onChange: e => setMileage(e.target.value),\n        variant: \"outlined\",\n        required: true,\n        margin: \"normal\",\n        slotProps: {\n          min: 0,\n          max: 1000000\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Date\",\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        InputLabelProps: {\n          shrink: true\n        },\n        variant: \"outlined\",\n        required: true,\n        margin: \"normal\",\n        slotProps: {\n          max: today\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          marginTop: \"16px\"\n        },\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(AddMaintenance, \"U2jCVqLJ4JmCgRsybyMS3Mhz/c8=\");\n_c = AddMaintenance;\nexport default AddMaintenance;\nvar _c;\n$RefreshReg$(_c, \"AddMaintenance\");","map":{"version":3,"names":["React","useState","Autocomplete","TextField","Button","MenuItem","auth","Select","FormControl","InputLabel","Box","Typography","jsxDEV","_jsxDEV","AddMaintenance","user_id","onAdd","_s","serviceType","setServiceType","mileage","setMileage","date","setDate","maintenanceOptions","handleSubmit","e","preventDefault","user","currentUser","console","error","idToken","getIdToken","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","data","json","log","window","location","reload","today","Date","toISOString","split","sx","maxWidth","margin","marginTop","padding","border","borderRadius","backgroundColor","children","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","freeSolo","fullWidth","options","value","onChange","event","newValue","renderInput","params","label","required","type","target","slotProps","min","max","InputLabelProps","shrink","color","_c","$RefreshReg$"],"sources":["C:/Users/kyril/IdeaProjects/car-maintenance-tracker/frontend/src/components/AddMaintenance.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Autocomplete, TextField } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { auth } from \"../firebase\";\r\nimport Select from \"@mui/material/Select\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction AddMaintenance({ user_id ,onAdd }){\r\n    const [serviceType, setServiceType] = useState(\"\");\r\n    const [mileage, setMileage] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const maintenanceOptions = [\r\n      \"Oil Change\",\r\n      \"Brake Pads\",\r\n      \"Tire Rotation\",\r\n      \"Battery Replacement\",\r\n      \"Spark Plugs\",\r\n      \"Coolant Flush\",\r\n      \"Transmission Fluid\",\r\n      \"Cabin Air Filter\",\r\n      \"Inspection\",\r\n      \"Alignment\",\r\n      \"Tire Change\",\r\n      \"Power Steering Fluid\",\r\n      \"Serpentine Belt\",\r\n      \"Wiper Blades\",\r\n      \"Brake Fluid\",\r\n      \"Engine Replacement\",\r\n      \"Transmission Replacement\",\r\n      \"Brake Caliper Replacement\",\r\n      \"Strut Replacement\",\r\n      \"Wheel Balance\",\r\n      \"Alternator Replacement\",\r\n      \"Engine Air Filter Replacement\",\r\n      \"Headlight Bulb Replacement\",\r\n      \"Windshield Crack Repair\",\r\n      \"Windshield Replacement\",\r\n      \"Custom...\"\r\n    ];\r\n\r\n  //   const handleSubmit = async (e) => {\r\n  //     e.preventDefault();\r\n  //     if (!serviceType || !mileage || !date) return;\r\n  //     const user = auth.currentUser;\r\n  //     if(!user) {\r\n  //       console.error(\"User is not logged in\");\r\n  //       return;\r\n  //     }\r\n\r\n  //     const idToken = await user.getIdToken();\r\n  \r\n  //     const newRecord = { serviceType, mileage, date, user_id };\r\n      \r\n        \r\n\r\n  \r\n  //     try {\r\n  //         console.log(\"Submitting record:\", { serviceType, mileage, date });\r\n  //         const response = await fetch(\"http://127.0.0.1:5000/add_record\", {\r\n  //             method: \"POST\",\r\n  //             headers: { \r\n  //               \"Content-Type\": \"application/json\",\r\n  //             },\r\n  //             body: JSON.stringify(newRecord)\r\n  //         });\r\n  \r\n  //         if (!response.ok) {\r\n  //             throw new Error(\"Failed to add record\");\r\n  //         }\r\n  \r\n  //         const data = await response.json();\r\n  //         console.log(\"Record Added Successfully!\", data);\r\n  //         window.location.reload();\r\n  \r\n  //     } catch (error) {\r\n  //         console.error(\"Error:\", error);\r\n  //     }\r\n  // };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!serviceType || !mileage || !date) return;\r\n  \r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      console.error(\"User is not logged in\");\r\n      return;\r\n    }\r\n  \r\n    const idToken = await user.getIdToken();\r\n  \r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/add_record\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${idToken}`, // âœ… token included\r\n        },\r\n        body: JSON.stringify({\r\n          serviceType,\r\n          mileage,\r\n          date,\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) throw new Error(\"Failed to add record\");\r\n      const data = await response.json();\r\n      console.log(\"Added record:\", data);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: \"600px\",\r\n        margin: \"auto\",\r\n        marginTop: \"20px\",\r\n        padding: \"20px\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"8px\",\r\n        backgroundColor: \"#f9f9f9\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" fontWeight=\"bold\" gutterBottom>\r\n        Add Maintenance Record\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <Autocomplete\r\n          freeSolo\r\n          fullWidth\r\n          options={maintenanceOptions}\r\n          value={serviceType}\r\n          onChange={(event, newValue) => setServiceType(newValue)}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Service Type\"\r\n              variant=\"outlined\"\r\n              required\r\n              margin=\"normal\"\r\n            />\r\n          )}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          label=\"Mileage\"\r\n          type=\"number\"\r\n          value={mileage}\r\n          onChange={(e) => setMileage(e.target.value)}\r\n          variant=\"outlined\"\r\n          required\r\n          margin=\"normal\"\r\n          slotProps={{\r\n            min: 0,\r\n            max: 1000000\r\n          }}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          InputLabelProps={{ shrink: true }}\r\n          variant=\"outlined\"\r\n          required\r\n          margin=\"normal\"\r\n          slotProps={{\r\n            max: today\r\n          }}\r\n        />\r\n        <Button\r\n          fullWidth\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ marginTop: \"16px\" }}\r\n        >\r\n          Add Record\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AddMaintenance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}